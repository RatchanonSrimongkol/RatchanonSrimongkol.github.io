// 1. ‡∏Ñ‡∏¥‡∏î‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô‡∏ï‡πà‡∏≠‡∏ä‡∏¥‡πâ‡∏ô
function addNumbers1() {
  const num1 = parseFloat(document.getElementById('num1-1').value) || 0; //document.getElementById('num1-1') ‚Üí ‡∏´‡∏¢‡∏¥‡∏ö <input> ‡∏ô‡∏±‡πâ‡∏ô‡∏°‡∏≤ .value ‚Üí ‡πÄ‡∏≠‡∏≤‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏£‡∏≠‡∏Å parseFloat(...) ‚Üí ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° (string) ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç (float) || 0 ‚Üí ‡∏ñ‡πâ‡∏≤‡πÉ‡∏™‡πà‡∏Ñ‡πà‡∏≤‡∏ß‡πà‡∏≤‡∏á ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç ‚Üí ‡πÉ‡∏ä‡πâ 0 ‡πÅ‡∏ó‡∏ô
  const num2 = parseFloat(document.getElementById('num2-1').value) || 0;
  const result = num2 !== 0 ? (num1 / num2).toFixed(2) : 0; //num2 !== 0 ‚Üí ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà 0 ‚Üí ‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì (num1 / num2) ‚Üí ‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô‡∏£‡∏ß‡∏° √∑ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ä‡∏¥‡πâ‡∏ô = ‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô‡∏ï‡πà‡∏≠‡∏ä‡∏¥‡πâ‡∏ô .toFixed(2) ‚Üí ‡∏õ‡∏±‡∏î‡πÄ‡∏®‡∏©‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°‡πÉ‡∏´‡πâ 2 ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á ‡πÄ‡∏ä‡πà‡∏ô 10.3333 ‚Üí 10.33 : 0 ‚Üí ‡∏ñ‡πâ‡∏≤ num2 ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö 0 ‚Üí ‡πÉ‡∏´‡πâ result ‡πÄ‡∏õ‡πá‡∏ô 0 ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏´‡∏≤‡∏£‡∏®‡∏π‡∏ô‡∏¢‡πå (‡∏´‡∏≤‡∏£ 0 ‡πÄ‡∏Å‡∏¥‡∏î error)




  document.getElementById('result1').innerHTML = `<strong>‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô‡∏ï‡πà‡∏≠‡∏ä‡∏¥‡πâ‡∏ô: ${result} ‡∏ö‡∏≤‡∏ó</strong>`; //‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏≤‡∏Å‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• ‚Üí ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏° .innerHTML = ...
}

// 2. ‡∏´‡∏≤‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πà‡∏≠1‡∏ä‡∏¥‡πâ‡∏ô
function addNumbers2() {
  const num1 = parseFloat(document.getElementById('num1-2').value) || 0;
  const num2 = parseFloat(document.getElementById('num2-2').value) || 0;
  const result = num2 !== 0 ? (num1 / num2).toFixed(2) : 0;
  document.getElementById('result2').innerHTML = `<strong>‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πà‡∏≠‡∏ä‡∏¥‡πâ‡∏ô: ${result} ‡∏ö‡∏≤‡∏ó</strong>`;
}

// 3. ‡∏´‡∏≤‡∏Ñ‡πà‡∏≤‡∏™‡πà‡∏á‡∏ï‡πà‡∏≠‡∏ä‡∏¥‡πâ‡∏ô
function addNumbers3() {
  const num1 = parseFloat(document.getElementById('num1-3').value) || 0;
  const num2 = parseFloat(document.getElementById('num2-3').value) || 0;
  const result = num2 !== 0 ? (num1 / num2).toFixed(2) : 0;
  document.getElementById('result3').innerHTML = `<strong>‡∏Ñ‡πà‡∏≤‡∏™‡πà‡∏á‡∏ï‡πà‡∏≠‡∏ä‡∏¥‡πâ‡∏ô: ${result} ‡∏ö‡∏≤‡∏ó</strong>`;
}

// 4. ‡∏´‡∏≤‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ñ‡∏∏‡∏á1‡∏ñ‡∏∏‡∏á
function addNumbers4() {
  const num1 = parseFloat(document.getElementById('num1-4').value) || 0;
  const num2 = parseFloat(document.getElementById('num2-4').value) || 0;
  const result = num2 !== 0 ? (num1 / num2).toFixed(2) : 0;
  document.getElementById('result4').innerHTML = `<strong>‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ñ‡∏∏‡∏á‡∏ï‡πà‡∏≠‡πÉ‡∏ö: ${result} ‡∏ö‡∏≤‡∏ó</strong>`;
}

// 5. ‡∏Ñ‡∏¥‡∏î‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢‡∏ï‡πà‡∏≠‡∏ä‡∏¥‡πâ‡∏ô
function addNumbers5() {
  const num1 = parseFloat(document.getElementById('num1-5').value) || 0;
  const num2 = parseFloat(document.getElementById('num2-5').value) || 0;
  const num3 = parseFloat(document.getElementById('num3-5').value) || 0;
  const num4 = parseFloat(document.getElementById('num4-5').value) || 0;
  const result = (num1 + num2 + num3 + num4).toFixed(2);
  document.getElementById('result5').innerHTML = `<strong>‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢‡∏ï‡πà‡∏≠‡∏ä‡∏¥‡πâ‡∏ô: ${result} ‡∏ö‡∏≤‡∏ó</strong>`;
}

// 6. ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
function addNumbers6() {
  const num1 = parseFloat(document.getElementById('num1-6').value) || 0;
  const num2 = parseFloat(document.getElementById('num2-6').value) || 0;
  const num3 = parseFloat(document.getElementById('num3-6').value) || 0;
  const num4 = parseFloat(document.getElementById('num4-6').value) || 0;
  const num5 = parseFloat(document.getElementById('num5-6').value) || 0;
  const num6 = parseFloat(document.getElementById('num6-6').value) || 0;
  const num7 = parseFloat(document.getElementById('num7-6').value) || 0;
  const result = (num1 + num2 + num3 + num4 + num5 + num6 + num7).toFixed(2);
  document.getElementById('result6').innerHTML = `<strong>‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${result} ‡∏ö‡∏≤‡∏ó</strong>`;
}

// 7. ‡∏Ñ‡∏¥‡∏î‡∏Å‡∏≥‡πÑ‡∏£
function addNumbers7() {
  const num1 = parseFloat(document.getElementById('num1-7').value) || 0;
  const num2 = parseFloat(document.getElementById('num2-7').value) || 0;
  const result = (num1 - num2).toFixed(2);
  const isProfit = result >= 0;
  document.getElementById('result7').innerHTML = `<strong>${isProfit ? 'üéâ ‡∏Å‡∏≥‡πÑ‡∏£' : 'üòü ‡∏Ç‡∏≤‡∏î‡∏ó‡∏∏‡∏ô'}: ${Math.abs(result)} ‡∏ö‡∏≤‡∏ó</strong>`;
}

// Interactive effects
document.addEventListener('DOMContentLoaded', function() {
  // Add hover effects to input groups
  document.querySelectorAll('input').forEach(input => {
    input.addEventListener('focus', function() {
      this.parentElement.style.transform = 'scale(1.02)';
    });
    
    input.addEventListener('blur', function() {
      this.parentElement.style.transform = 'scale(1)';
    });
  });

  // Add keyboard support for calculations
  document.querySelectorAll('input').forEach((input, index) => {
    input.addEventListener('keypress', function(e) {
      if (e.key === 'Enter') {
        // Find which calculator box this input belongs to
        const calculatorBox = this.closest('.calculator-box');
        const calculateBtn = calculatorBox.querySelector('.calculate-btn');
        calculateBtn.click();
      }
    });
  });
});